-DATASET CSV empty
--

-CASE CreateIntegerStats
# Note that integer compression means that values get re-compressed and are updated out of place
-STATEMENT CREATE NODE TABLE test(id SERIAL, value INT8, PRIMARY KEY(id));
---- ok
-STATEMENT CREATE (a:test {value:1})
---- ok
-STATEMENT CALL storage_info('test') WHERE column_name = "value" RETURN min, max;
---- 1
1|1
-STATEMENT CREATE (a:test {value:5})
---- ok
-STATEMENT CALL storage_info('test') WHERE column_name = "value" RETURN min, max;
---- 1
1|5
-STATEMENT CREATE (a:test {value:2})
---- ok
-STATEMENT CALL storage_info('test') WHERE column_name = "value" RETURN min, max;
---- 1
1|5
-STATEMENT CREATE (a:test {value:6})
---- ok
-STATEMENT CALL storage_info('test') WHERE column_name = "value" RETURN min, max;
---- 1
1|6

-CASE CreateDoubleStats
# Note that integer compression means that values get re-compressed and are updated out of place
-STATEMENT CREATE NODE TABLE test(id SERIAL, value DOUBLE, PRIMARY KEY(id));
---- ok
-STATEMENT CREATE (a:test {value:1})
---- ok
-STATEMENT CALL storage_info('test') WHERE column_name = "value" RETURN min, max;
---- 1
1.0|1.0
-STATEMENT CREATE (a:test {value:5})
---- ok
-STATEMENT CALL storage_info('test') WHERE column_name = "value" RETURN min, max;
---- 1
1.0|5.0
-STATEMENT CREATE (a:test {value:2})
---- ok
-STATEMENT CALL storage_info('test') WHERE column_name = "value" RETURN min, max;
---- 1
1.0|5.0
-STATEMENT CREATE (a:test {value:6})
---- ok
-STATEMENT CALL storage_info('test') WHERE column_name = "value" RETURN min, max;
---- 1
1.0|6.0

-CASE DeleteIntegerStats
-STATEMENT CREATE NODE TABLE test(id SERIAL, value INT8, PRIMARY KEY(id));
---- ok
-STATEMENT CREATE (a:test {value:1})
---- ok
-STATEMENT CREATE (a:test {value:2})
---- ok
-STATEMENT CALL storage_info('test') WHERE column_name = "value" RETURN max;
---- 1
2
-STATEMENT MATCH (a:test) WHERE a.value = 2 DELETE a
---- ok
# Maximum may not change after deletion, but should still be at least the new maximum
-STATEMENT CALL storage_info('test') WHERE column_name = "value" RETURN to_int8(max) >= 1;
---- 1
True

# FIXME(Sam/Guodong): Stats do not change after update
-CASE UpdateIntegerStats
-SKIP
-STATEMENT CREATE NODE TABLE test(id SERIAL, value INT8, PRIMARY KEY(id));
---- ok
-STATEMENT CREATE (a:test {value:1})
---- ok
-STATEMENT CREATE (a:test {value:2})
---- ok
-STATEMENT CALL storage_info('test') WHERE column_name = "value" RETURN max;
---- 1
2
-STATEMENT MATCH (a:test) WHERE a.value = 2 SET a.value = 3
---- ok
-STATEMENT CALL storage_info('test') WHERE column_name = "value" RETURN max;
---- 1
3
-STATEMENT MATCH (a:test) WHERE a.value = 1 SET a.value = 2
---- ok
-STATEMENT CALL storage_info('test') WHERE column_name = "value" RETURN to_int8(min) <= 2;
---- 1
True
-STATEMENT MATCH (a:test) WHERE a.value = 2 SET a.value = -2
---- ok
-STATEMENT CALL storage_info('test') WHERE column_name = "value" RETURN min;
---- 1
-2
-STATEMENT MATCH (a:test) WHERE a.value = -2 SET a.value = -3
---- ok
-STATEMENT CALL storage_info('test') WHERE column_name = "value" RETURN min;
---- 1
-3

# FIXME(Sam/Guodong): Stats do not change after update
-CASE UpdateDoubleStats
-SKIP
-STATEMENT CREATE NODE TABLE test(id SERIAL, value DOUBLE, PRIMARY KEY(id));
---- ok
-STATEMENT CREATE (a:test {value:1})
---- ok
-STATEMENT CREATE (a:test {value:2})
---- ok
-STATEMENT CALL storage_info('test') WHERE column_name = "value" RETURN max;
---- 1
2.0
-STATEMENT MATCH (a:test) WHERE a.value = 2 SET a.value = 3.123456
---- ok
-STATEMENT CALL storage_info('test') WHERE column_name = "value" RETURN max;
---- 1
3.123456
-STATEMENT MATCH (a:test) WHERE a.value = 1 SET a.value = 1.5
---- ok
-STATEMENT CALL storage_info('test') WHERE column_name = "value" RETURN to_double(min) <= 1.5;
---- 1
True
